/* -------------------------------------------------- */
	Unit Test
/* -------------------------------------------------- */

Unit Test

	A unit of work.

	Results

		Return Value / Exceptions

			return int

		Noticeable State Change

			void

		3rd Party Call

			void
			
			Only time mock-object makes sense
			Fire-and-forget


Trustworthy

	Pass or fail, you still go back to check. Its untrustworthy.
	Worry when tests fail.

Maintainable

Readable



MOCK

	Mocks are objects pre-programmed with expectations which form a specification of the calls they are expected to receive.
	At most 5% of code should be MOCK objects.

STUB

	Stubs provide canned answers to calls made during the test, usually not responding at all to anything outside what's programmed in for the test. Stubs may also record information about calls, such as an email gateway stub that remembers the messages it 'sent', or maybe only how many messages it 'sent'.

/* -------------------------------------------------- */
	Compiler
/* -------------------------------------------------- */

Source Code --> Machine Code

Convert keywords to machine code (0s and 1s);




/* -------------------------------------------------- */
	Int overflow
/* -------------------------------------------------- */

Bits: 11...1 ---> becomes negative OR 0 once bits overflow

Count too high, you wrap around 0

/* -------------------------------------------------- */
	Floating-point imprecision
/* -------------------------------------------------- */

Computers are imprecise

	Infinite possible numbers in math

	Computer rounds

	Computer shows us the closest approx. to the number we want.



/* -------------------------------------------------- */
	DevOps
/* -------------------------------------------------- */

 A set of practices that emphasize the collaboration and communication of both software developers and information technology (IT) professionals while automating the process of software delivery and infrastructure changes.


Collaboration:

	Development
	QA
	IT Operations


DevOps Toolchain:

	Code
		Code development and review, version control tools, code merging;

	Build
		Continuous integration tools, build status;

	Test
		Continuous testing tools that provide feedback on business risks;

	Package
		Artifact repository, application pre-deployment staging;

	Release
		Change management, release approvals, release automation;

	Configure
		Infrastructure configuration and management, Infrastructure as Code tools;

	Monitor
		Applications performance monitoring, endâ€“user experience.


Culture

	Operations
		seeks organizational stability;
	
	Developers
		seek change;
	
	Testers
		seek risk reduction


Client Feedback

	Reduce rework

		Shorter testing cycle

	Reduce overhead

		Automation

			Developer to reduce overhead of QA through automation

	*Lean thinking


/* -------------------------------------------------- */
	
/* -------------------------------------------------- */


/* -------------------------------------------------- */
	
/* -------------------------------------------------- */


/* -------------------------------------------------- */
	
/* -------------------------------------------------- */

/* -------------------------------------------------- */
	
/* -------------------------------------------------- */